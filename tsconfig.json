{
  "compileOnSave": true,
  "compilerOptions": {
    /***** *
     * Basic Options
     ***** */

    // Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'.
    "target": "es2017",

    // Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'.
    "module": "commonjs",

    // Specify library files to be included in the compilation.
    "lib": ["es2017", "dom", "esnext"],

    // Allow javascript files to be compiled.
    // "allowJs": true,

    // Report errors in .js files.
    // "checkJs": true,

    // Specify JSX code generation: 'preserve', 'react-native', or 'react'.
    // "jsx": "preserve",

    // Generates corresponding '.d.ts' file.
    // "declaration": true,

    // Generates corresponding '.map' file.
    "sourceMap": true,

    // Concatenate and emit output to single file.
    // "outFile": "./",

    // Redirect output structure to the directory.
    "outDir": "dist",

    // Specify the root directory of input files. Use to control the output directory structure with --outDir.
    // "rootDir": "./",

    // Do not emit comments to output.
    // "removeComments": true,

    // Do not emit outputs.
    // "noEmit": true,

    // Import emit helpers from 'tslib'.
    // "importHelpers": true,

    // Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'.
    // "downlevelIteration": true,

    // Transpile each file as a separate module (similar to 'ts.transpileModule').
    // "isolatedModules": true,

    /***** *
     * Strict Type-Checking Options
     ***** */

    // Enable all strict type-checking options.
    // "strict": true,

    // Raise error on expressions and declarations with an implied 'any' type.
    "noImplicitAny": true,

    // Enable strict null checks.
    "strictNullChecks": true,

    // Enable strict checking of function types.
    // "strictFunctionTypes": true,

    // Enable strict checking of property initialization in classes.
    // "strictPropertyInitialization": true,

    // Raise error on 'this' expressions with an implied 'any' type.
    "noImplicitThis": true,

    // Parse in strict mode and emit "use strict" for each source file.
    // "alwaysStrict": true,

    /***** *
     * Additional Checks
     ***** */

    // Report errors on unused locals.
    "noUnusedLocals": true,

    // Report errors on unused parameters.
    // "noUnusedParameters": true,

    // Report error when not all code paths in function return a value.
    "noImplicitReturns": true,

    // Report errors for fallthrough cases in switch statement.
    // "noFallthroughCasesInSwitch": true,

    /***** *
     * Module Resolution Options
     ***** */

    // Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6).
    "moduleResolution": "node",

    // Base directory to resolve non-absolute module names.
    // "baseUrl": "./",

    // A series of entries which re-map imports to lookup locations relative to the 'baseUrl'.
    // "paths": {},

    // List of root folders whose combined content represents the structure of the project at runtime.
    // "rootDirs": [],

    // List of folders to include type definitions from.
    "typeRoots": ["node_modules/@types"],

    // Type declaration files to be included in compilation.
    // "types": [],

    // Allow default imports from modules with no default export. This does not affect code emit, just typechecking.
    "allowSyntheticDefaultImports": true

    // Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'.
    // "esModuleInterop": true

    // Do not resolve the real path of symlinks.
    // "preserveSymlinks": true,

    /***** *
     * Source Map Options
     ***** */

    // Specify the location where debugger should locate TypeScript files instead of source locations.
    // "sourceRoot": "./",

    // Specify the location where debugger should locate map files instead of generated locations.
    // "mapRoot": "./",

    // Emit a single file with source maps instead of having a separate file.
    // "inlineSourceMap": true,

    // Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set.
    // "inlineSources": true,

    /***** *
     * Experimental Options
     ***** */

    // Enables experimental support for ES7 decorators.
    // "experimentalDecorators": true,

    // Enables experimental support for emitting type metadata for decorators.
    // "emitDecoratorMetadata": true,
  },
  "include": ["src/**/*"],
  "exclude": ["node_modules", "dist"]
}
